/**
 * This class is generated by jOOQ
 */
package generated.tables;


import generated.Keys;
import generated.Public;
import generated.tables.records.UserKeywordRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserKeyword extends TableImpl<UserKeywordRecord> {

	private static final long serialVersionUID = -1216856250;

	/**
	 * The reference instance of <code>public.user_keyword</code>
	 */
	public static final UserKeyword USER_KEYWORD = new UserKeyword();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<UserKeywordRecord> getRecordType() {
		return UserKeywordRecord.class;
	}

	/**
	 * The column <code>public.user_keyword.userid</code>.
	 */
	public final TableField<UserKeywordRecord, Integer> USERID = createField("userid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.user_keyword.keywordid</code>.
	 */
	public final TableField<UserKeywordRecord, Integer> KEYWORDID = createField("keywordid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>public.user_keyword</code> table reference
	 */
	public UserKeyword() {
		this("user_keyword", null);
	}

	/**
	 * Create an aliased <code>public.user_keyword</code> table reference
	 */
	public UserKeyword(String alias) {
		this(alias, USER_KEYWORD);
	}

	private UserKeyword(String alias, Table<UserKeywordRecord> aliased) {
		this(alias, aliased, null);
	}

	private UserKeyword(String alias, Table<UserKeywordRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<UserKeywordRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<UserKeywordRecord, ?>>asList(Keys.CONSTRAINT_B, Keys.CONSTRAINT_B0);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserKeyword as(String alias) {
		return new UserKeyword(alias, this);
	}

	/**
	 * Rename this table
	 */
	public UserKeyword rename(String name) {
		return new UserKeyword(name, null);
	}
}
