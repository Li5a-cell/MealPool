/**
 * This class is generated by jOOQ
 */
package generated.tables.records;


import generated.tables.User;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record9<Integer, String, String, String, String, Integer, String, Integer, Integer> {

	private static final long serialVersionUID = -203445928;

	/**
	 * Setter for <code>public.user.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.user.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.user.password</code>.
	 */
	public void setPassword(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.user.password</code>.
	 */
	public String getPassword() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>public.user.email</code>.
	 */
	public void setEmail(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.user.email</code>.
	 */
	public String getEmail() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>public.user.displayname</code>.
	 */
	public void setDisplayname(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.user.displayname</code>.
	 */
	public String getDisplayname() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>public.user.zip</code>.
	 */
	public void setZip(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>public.user.zip</code>.
	 */
	public String getZip() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>public.user.favoritecount</code>.
	 */
	public void setFavoritecount(Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>public.user.favoritecount</code>.
	 */
	public Integer getFavoritecount() {
		return (Integer) getValue(5);
	}

	/**
	 * Setter for <code>public.user.photo</code>.
	 */
	public void setPhoto(String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>public.user.photo</code>.
	 */
	public String getPhoto() {
		return (String) getValue(6);
	}

	/**
	 * Setter for <code>public.user.weeklyeatinggoal</code>.
	 */
	public void setWeeklyeatinggoal(Integer value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>public.user.weeklyeatinggoal</code>.
	 */
	public Integer getWeeklyeatinggoal() {
		return (Integer) getValue(7);
	}

	/**
	 * Setter for <code>public.user.weeklycookinggoal</code>.
	 */
	public void setWeeklycookinggoal(Integer value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>public.user.weeklycookinggoal</code>.
	 */
	public Integer getWeeklycookinggoal() {
		return (Integer) getValue(8);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record9 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<Integer, String, String, String, String, Integer, String, Integer, Integer> fieldsRow() {
		return (Row9) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<Integer, String, String, String, String, Integer, String, Integer, Integer> valuesRow() {
		return (Row9) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return User.USER.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return User.USER.PASSWORD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return User.USER.EMAIL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return User.USER.DISPLAYNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return User.USER.ZIP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field6() {
		return User.USER.FAVORITECOUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field7() {
		return User.USER.PHOTO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field8() {
		return User.USER.WEEKLYEATINGGOAL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field9() {
		return User.USER.WEEKLYCOOKINGGOAL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getPassword();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getEmail();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getDisplayname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getZip();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value6() {
		return getFavoritecount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getPhoto();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value8() {
		return getWeeklyeatinggoal();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value9() {
		return getWeeklycookinggoal();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRecord value2(String value) {
		setPassword(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRecord value3(String value) {
		setEmail(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRecord value4(String value) {
		setDisplayname(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRecord value5(String value) {
		setZip(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRecord value6(Integer value) {
		setFavoritecount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRecord value7(String value) {
		setPhoto(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRecord value8(Integer value) {
		setWeeklyeatinggoal(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRecord value9(Integer value) {
		setWeeklycookinggoal(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRecord values(Integer value1, String value2, String value3, String value4, String value5, Integer value6, String value7, Integer value8, Integer value9) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached UserRecord
	 */
	public UserRecord() {
		super(User.USER);
	}

	/**
	 * Create a detached, initialised UserRecord
	 */
	public UserRecord(Integer id, String password, String email, String displayname, String zip, Integer favoritecount, String photo, Integer weeklyeatinggoal, Integer weeklycookinggoal) {
		super(User.USER);

		setValue(0, id);
		setValue(1, password);
		setValue(2, email);
		setValue(3, displayname);
		setValue(4, zip);
		setValue(5, favoritecount);
		setValue(6, photo);
		setValue(7, weeklyeatinggoal);
		setValue(8, weeklycookinggoal);
	}
}
