/**
 * This class is generated by jOOQ
 */
package generated.tables.records;


import generated.tables.Recipe;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecipeRecord extends UpdatableRecordImpl<RecipeRecord> implements Record9<Integer, Integer, String, String, Integer, Integer, Integer, BigDecimal, String> {

	private static final long serialVersionUID = 1477413648;

	/**
	 * Setter for <code>public.recipe.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.recipe.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.recipe.chefid</code>.
	 */
	public void setChefid(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.recipe.chefid</code>.
	 */
	public Integer getChefid() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>public.recipe.description</code>.
	 */
	public void setDescription(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.recipe.description</code>.
	 */
	public String getDescription() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>public.recipe.name</code>.
	 */
	public void setName(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.recipe.name</code>.
	 */
	public String getName() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>public.recipe.favoritecount</code>.
	 */
	public void setFavoritecount(Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>public.recipe.favoritecount</code>.
	 */
	public Integer getFavoritecount() {
		return (Integer) getValue(4);
	}

	/**
	 * Setter for <code>public.recipe.servings</code>.
	 */
	public void setServings(Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>public.recipe.servings</code>.
	 */
	public Integer getServings() {
		return (Integer) getValue(5);
	}

	/**
	 * Setter for <code>public.recipe.purchasedcount</code>.
	 */
	public void setPurchasedcount(Integer value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>public.recipe.purchasedcount</code>.
	 */
	public Integer getPurchasedcount() {
		return (Integer) getValue(6);
	}

	/**
	 * Setter for <code>public.recipe.price</code>.
	 */
	public void setPrice(BigDecimal value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>public.recipe.price</code>.
	 */
	public BigDecimal getPrice() {
		return (BigDecimal) getValue(7);
	}

	/**
	 * Setter for <code>public.recipe.photo</code>.
	 */
	public void setPhoto(String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>public.recipe.photo</code>.
	 */
	public String getPhoto() {
		return (String) getValue(8);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record9 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<Integer, Integer, String, String, Integer, Integer, Integer, BigDecimal, String> fieldsRow() {
		return (Row9) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<Integer, Integer, String, String, Integer, Integer, Integer, BigDecimal, String> valuesRow() {
		return (Row9) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Recipe.RECIPE.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Recipe.RECIPE.CHEFID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Recipe.RECIPE.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Recipe.RECIPE.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field5() {
		return Recipe.RECIPE.FAVORITECOUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field6() {
		return Recipe.RECIPE.SERVINGS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field7() {
		return Recipe.RECIPE.PURCHASEDCOUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<BigDecimal> field8() {
		return Recipe.RECIPE.PRICE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field9() {
		return Recipe.RECIPE.PHOTO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getChefid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getFavoritecount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value6() {
		return getServings();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value7() {
		return getPurchasedcount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigDecimal value8() {
		return getPrice();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value9() {
		return getPhoto();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RecipeRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RecipeRecord value2(Integer value) {
		setChefid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RecipeRecord value3(String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RecipeRecord value4(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RecipeRecord value5(Integer value) {
		setFavoritecount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RecipeRecord value6(Integer value) {
		setServings(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RecipeRecord value7(Integer value) {
		setPurchasedcount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RecipeRecord value8(BigDecimal value) {
		setPrice(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RecipeRecord value9(String value) {
		setPhoto(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RecipeRecord values(Integer value1, Integer value2, String value3, String value4, Integer value5, Integer value6, Integer value7, BigDecimal value8, String value9) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached RecipeRecord
	 */
	public RecipeRecord() {
		super(Recipe.RECIPE);
	}

	/**
	 * Create a detached, initialised RecipeRecord
	 */
	public RecipeRecord(Integer id, Integer chefid, String description, String name, Integer favoritecount, Integer servings, Integer purchasedcount, BigDecimal price, String photo) {
		super(Recipe.RECIPE);

		setValue(0, id);
		setValue(1, chefid);
		setValue(2, description);
		setValue(3, name);
		setValue(4, favoritecount);
		setValue(5, servings);
		setValue(6, purchasedcount);
		setValue(7, price);
		setValue(8, photo);
	}
}
