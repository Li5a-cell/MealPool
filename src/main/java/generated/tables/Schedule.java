/**
 * This class is generated by jOOQ
 */
package generated.tables;


import generated.Keys;
import generated.Public;
import generated.tables.records.ScheduleRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Schedule extends TableImpl<ScheduleRecord> {

	private static final long serialVersionUID = 520964788;

	/**
	 * The reference instance of <code>public.schedule</code>
	 */
	public static final Schedule SCHEDULE = new Schedule();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ScheduleRecord> getRecordType() {
		return ScheduleRecord.class;
	}

	/**
	 * The column <code>public.schedule.id</code>.
	 */
	public final TableField<ScheduleRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.schedule.chefid</code>.
	 */
	public final TableField<ScheduleRecord, Integer> CHEFID = createField("chefid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.schedule.recipeid</code>.
	 */
	public final TableField<ScheduleRecord, Integer> RECIPEID = createField("recipeid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.schedule.scheduled</code>.
	 */
	public final TableField<ScheduleRecord, Timestamp> SCHEDULED = createField("scheduled", org.jooq.impl.SQLDataType.TIMESTAMP.defaulted(true), this, "");

	/**
	 * The column <code>public.schedule.pickup</code>.
	 */
	public final TableField<ScheduleRecord, Boolean> PICKUP = createField("pickup", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

	/**
	 * The column <code>public.schedule.sitdown</code>.
	 */
	public final TableField<ScheduleRecord, Boolean> SITDOWN = createField("sitdown", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

	/**
	 * Create a <code>public.schedule</code> table reference
	 */
	public Schedule() {
		this("schedule", null);
	}

	/**
	 * Create an aliased <code>public.schedule</code> table reference
	 */
	public Schedule(String alias) {
		this(alias, SCHEDULE);
	}

	private Schedule(String alias, Table<ScheduleRecord> aliased) {
		this(alias, aliased, null);
	}

	private Schedule(String alias, Table<ScheduleRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ScheduleRecord, Integer> getIdentity() {
		return Keys.IDENTITY_SCHEDULE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ScheduleRecord> getPrimaryKey() {
		return Keys.CONSTRAINT_50C;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ScheduleRecord>> getKeys() {
		return Arrays.<UniqueKey<ScheduleRecord>>asList(Keys.CONSTRAINT_50C);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<ScheduleRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<ScheduleRecord, ?>>asList(Keys.CONSTRAINT_5, Keys.CONSTRAINT_50);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Schedule as(String alias) {
		return new Schedule(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Schedule rename(String name) {
		return new Schedule(name, null);
	}
}
