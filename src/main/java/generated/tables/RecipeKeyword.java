/**
 * This class is generated by jOOQ
 */
package generated.tables;


import generated.Keys;
import generated.Public;
import generated.tables.records.RecipeKeywordRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecipeKeyword extends TableImpl<RecipeKeywordRecord> {

	private static final long serialVersionUID = 1760609224;

	/**
	 * The reference instance of <code>public.recipe_keyword</code>
	 */
	public static final RecipeKeyword RECIPE_KEYWORD = new RecipeKeyword();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<RecipeKeywordRecord> getRecordType() {
		return RecipeKeywordRecord.class;
	}

	/**
	 * The column <code>public.recipe_keyword.recipeid</code>.
	 */
	public final TableField<RecipeKeywordRecord, Integer> RECIPEID = createField("recipeid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.recipe_keyword.keywordid</code>.
	 */
	public final TableField<RecipeKeywordRecord, Integer> KEYWORDID = createField("keywordid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>public.recipe_keyword</code> table reference
	 */
	public RecipeKeyword() {
		this("recipe_keyword", null);
	}

	/**
	 * Create an aliased <code>public.recipe_keyword</code> table reference
	 */
	public RecipeKeyword(String alias) {
		this(alias, RECIPE_KEYWORD);
	}

	private RecipeKeyword(String alias, Table<RecipeKeywordRecord> aliased) {
		this(alias, aliased, null);
	}

	private RecipeKeyword(String alias, Table<RecipeKeywordRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<RecipeKeywordRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<RecipeKeywordRecord, ?>>asList(Keys.CONSTRAINT_EF, Keys.CONSTRAINT_EF4);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RecipeKeyword as(String alias) {
		return new RecipeKeyword(alias, this);
	}

	/**
	 * Rename this table
	 */
	public RecipeKeyword rename(String name) {
		return new RecipeKeyword(name, null);
	}
}
